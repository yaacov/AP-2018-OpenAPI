openapi: "3.0.0"
info:
  version: 2.0.0
  title: AP 2018 Bookstore
  license:
    name: MIT
servers:
  - url: http://bookstore.example.com/v2
paths:
  /books:
    get:
      summary: List books
      operationId: listBooks
      tags:
        - books
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          description: Query to filter books
          required: false
          schema:
            type: string
      responses:
        '200':
          description: An array of books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Books"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a book
      operationId: createBooks
      tags:
        - books
      requestBody:
        description: Book to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '200':
          description: book response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /books/{bookId}:
    get:
      summary: Info for a specific book
      operationId: showBookById
      tags:
        - books
      parameters:
        - name: bookId
          in: path
          required: true
          description: The id of the book to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Books"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Book:
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        tag:
          type: string
        pages:
          type: integer
          format: int64
    NewBook:
      required:
        - title
      properties:
        title:
          type: string
        author:
          type: string
        tag:
          type: string
        pages:
          type: integer
          format: int64
    Books:
      type: array
      items:
        $ref: "#/components/schemas/Book"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
